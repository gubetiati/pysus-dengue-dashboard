name: Atualiza√ß√£o Semanal de Dados

on:
  schedule:
    - cron: '0 1 * * 1' # Executa toda segunda-feira √† 1h da manh√£
  workflow_dispatch: # Permite rodar manualmente

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permite que o bot escreva no reposit√≥rio

    steps:
    - name: Checkout do c√≥digo
      uses: actions/checkout@v2
      with:
        ref: gh-pages # <-- Faz o checkout da branch gh-pages

    - name: Configurar Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.3'

    - name: Instalar depend√™ncias
      run: |
        python -m pip install --upgrade pip
        pip install pysus==1.0.0
        pip install requests  # ‚¨ÖÔ∏è ADICIONADO para o upload

    - name: Executar o script Python
      run: |
        python update_dengue.py

    - name: Fazer commit e push do novo arquivo
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Adiciona o arquivo gerado (ex: dengue_pr_2025.csv).
        # Os arquivos antigos permanecem no local do runner.
        git add *.csv
        
        # IMPORTANTE: A flag '-a' garante que arquivos j√° modificados ou novos sejam inclusos.
        git commit -a -m "Adiciona dados do ano atual [AUTOMACAO]"
        
        # Envia a altera√ß√£o sem sobrescrever o hist√≥rico (SEM --force).
        git push origin gh-pages

    # üîÑ ALTERNATIVA: Upload para OneDrive usando Bash + curl
    - name: Upload CSV para OneDrive (via curl)
      shell: bash
      run: |
        # Configurar vari√°veis
        CLIENT_ID="${{ secrets.ONEDRIVE_CLIENT_ID }}"
        CLIENT_SECRET="${{ secrets.ONEDRIVE_CLIENT_SECRET }}"
        REFRESH_TOKEN="${{ secrets.ONEDRIVE_REFRESH_TOKEN }}"
        
        echo "Obtendo access token..."
        
        # Obter access token
        TOKEN_RESPONSE=$(curl -s -X POST \
          "https://login.microsoftonline.com/common/oauth2/v2.0/token" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET&refresh_token=$REFRESH_TOKEN&grant_type=refresh_token&scope=https://graph.microsoft.com/Files.ReadWrite")
        
        ACCESS_TOKEN=$(echo $TOKEN_RESPONSE | jq -r '.access_token')
        
        echo "Access token obtido!"
        
        # Fazer upload de cada arquivo CSV
        for csv_file in *.csv; do
          echo "Enviando arquivo: $csv_file"
          
          curl -X PUT \
            "https://graph.microsoft.com/v1.0/me/drive/root:/PowerBI-Dashboard/$csv_file:/content" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: text/csv" \
            --data-binary @"$csv_file"
          
          echo "‚úÖ $csv_file enviado para OneDrive"
        done
