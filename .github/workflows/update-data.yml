name: Atualiza√ß√£o Semanal de Dados

on:
  schedule:
    - cron: '0 1 * * 1' # Executa toda segunda-feira √† 1h da manh√£
  workflow_dispatch: # Permite rodar manualmente

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permite que o bot escreva no reposit√≥rio

    steps:
    - name: Checkout do c√≥digo
      uses: actions/checkout@v2
      with:
        ref: gh-pages # <-- Faz o checkout da branch gh-pages

    - name: Configurar Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.3'

    - name: Instalar depend√™ncias
      run: |
        python -m pip install --upgrade pip
        pip install pysus==1.0.0
        pip install requests  # ‚¨ÖÔ∏è ADICIONADO para o upload

    - name: Executar o script Python
      run: |
        python update_dengue.py

    - name: Fazer commit e push do novo arquivo
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Adiciona o arquivo gerado (ex: dengue_pr_2025.csv).
        # Os arquivos antigos permanecem no local do runner.
        git add *.csv
        
        # IMPORTANTE: A flag '-a' garante que arquivos j√° modificados ou novos sejam inclusos.
        git commit -a -m "Adiciona dados do ano atual [AUTOMACAO]"
        
        # Envia a altera√ß√£o sem sobrescrever o hist√≥rico (SEM --force).
        git push origin gh-pages

    # üîÑ ALTERNATIVA FUNCIONAL: Upload para OneDrive usando PowerShell
    - name: Upload CSV para OneDrive (via PowerShell)
      shell: pwsh
      run: |
        # Configurar vari√°veis
        $clientId = "${{ secrets.ONEDRIVE_CLIENT_ID }}"
        $clientSecret = "${{ secrets.ONEDRIVE_CLIENT_SECRET }}"
        $refreshToken = "${{ secrets.ONEDRIVE_REFRESH_TOKEN }}"
        
        # Primeiro, obter um novo access token usando o refresh token
        $tokenResponse = Invoke-RestMethod -Method POST -Uri "https://login.microsoftonline.com/common/oauth2/v2.0/token" -Body @{
            client_id = $clientId
            client_secret = $clientSecret
            refresh_token = $refreshToken
            grant_type = 'refresh_token'
            scope = 'https://graph.microsoft.com/Files.ReadWrite'
        }
        
        $accessToken = $tokenResponse.access_token
        
        # Fazer upload de cada arquivo CSV
        Get-ChildItem -Path "*.csv" | ForEach-Object {
            $fileName = $_.Name
            $fileContent = [System.IO.File]::ReadAllBytes($_.FullName)
            
            # Fazer upload para o OneDrive
            $uploadUrl = "https://graph.microsoft.com/v1.0/me/drive/root:/PowerBI-Dashboard/$fileName:/content"
            
            try {
                Invoke-RestMethod -Method PUT -Uri $uploadUrl -Headers @{
                    Authorization = "Bearer $accessToken"
                } -Body $fileContent -ContentType "text/csv"
                
                Write-Host "‚úÖ Arquivo $fileName enviado com sucesso para o OneDrive"
            }
            catch {
                Write-Host "‚ùå Erro ao enviar $fileName : $($_.Exception.Message)"
            }
        }
