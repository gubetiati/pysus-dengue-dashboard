name: Atualização Semanal de Dados

on:
  schedule:
    - cron: '0 1 * * 1' # Executa toda segunda-feira à 1h da manhã
  workflow_dispatch: # Permite rodar manualmente

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permite que o bot escreva no repositório

    steps:
    - name: Checkout do código
      uses: actions/checkout@v2
      with:
        ref: gh-pages # <-- Faz o checkout da branch gh-pages

    - name: Configurar Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.3'

    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        pip install pysus==1.0.0
        pip install requests  # ⬅️ ADICIONADO para o upload

    - name: Executar o script Python
      run: |
        python update_dengue.py

    - name: Fazer commit e push do novo arquivo
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Adiciona o arquivo gerado (ex: dengue_pr_2025.csv).
        # Os arquivos antigos permanecem no local do runner.
        git add *.csv
        
        # IMPORTANTE: A flag '-a' garante que arquivos já modificados ou novos sejam inclusos.
        git commit -a -m "Adiciona dados do ano atual [AUTOMACAO]"
        
        # Envia a alteração sem sobrescrever o histórico (SEM --force).
        git push origin gh-pages

    - name: Upload para Azure Blob Storage
      shell: pwsh
      run: |
        # Instalar módulo Azure Storage
        Install-Module -Name Az.Storage -Force -AllowClobber
        $connectionString = "${{ secrets.AZURE_CONNECTION_STRING }}"
        $containerName = "dengue-csv-2025"
        $ctx = New-AzStorageContext -ConnectionString $connectionString

        Get-ChildItem -Path "./dengue_parana_2025.csv" | ForEach-Object {
            $fileName = $_.Name
            try {
                Set-AzStorageBlobContent -File $_.FullName `
                                         -Container $containerName `
                                         -Blob $fileName `
                                         -Context $ctx `
                                         -Force
                Write-Host "✅ $fileName enviado para Azure Blob Storage"
            }
            catch {
                Write-Host "❌ Erro ao enviar $fileName : $($_.Exception.Message)"
            }
        }
